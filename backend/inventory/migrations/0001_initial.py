# Generated by Django 5.1.7 on 2025-07-05 06:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('item_count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('user_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Procurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='procurement_documents/')),
                ('document_type', models.CharField(blank=True, choices=[('Purchase Order', 'Purchase Order'), ('MOU (Email)', 'MOU (Email)'), ('Internal Memo', 'Internal Memo'), ('Donation Letter', 'Donation Letter'), ('Invoice', 'Invoice')], max_length=50, null=True)),
                ('procurement_type', models.CharField(blank=True, choices=[('Purchase', 'Purchase'), ('Donation', 'Donation'), ('Transfer', 'Transfer')], max_length=20, null=True)),
                ('order_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('last_stock_movement', models.DateField(blank=True, null=True)),
                ('dead_stock_threshold_days', models.PositiveIntegerField(default=90)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.category')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('room_number', models.CharField(default='0', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='inventory.department')),
            ],
        ),
        migrations.CreateModel(
            name='ProcurementItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item')),
                ('procurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.procurement')),
            ],
        ),
        migrations.CreateModel(
            name='SendingStockRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_requests', to='inventory.item')),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(max_length=20)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='inventory.department')),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('movement_date', models.DateField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('from_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements_from', to='inventory.location')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='inventory.item')),
                ('to_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements_to', to='inventory.location')),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_stock_movements', to='inventory.user')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(max_length=50)),
                ('filters', models.JSONField(blank=True, null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('export_pdf', models.FileField(blank=True, null=True, upload_to='report_exports/pdf/')),
                ('export_excel', models.FileField(blank=True, null=True, upload_to='report_exports/excel/')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.user')),
            ],
        ),
        migrations.CreateModel(
            name='DiscardedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('reason', models.CharField(choices=[('Damaged', 'Damaged'), ('Obsolete', 'Obsolete'), ('Expired', 'Expired'), ('Other', 'Other')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discarded_items', to='inventory.item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discarded_items', to='inventory.location')),
                ('discarded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='discarded_items', to='inventory.user')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('entity_type', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField()),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='inventory.user')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryByLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_by_location', to='inventory.item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_by_location', to='inventory.location')),
            ],
            options={
                'verbose_name': 'Inventory by Location',
                'verbose_name_plural': 'Inventory by Locations',
                'unique_together': {('item', 'location')},
            },
        ),
        migrations.CreateModel(
            name='TotalInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_quantity', models.PositiveIntegerField(default=0)),
                ('order_number', models.CharField(max_length=20)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('order_date', models.DateField(blank=True, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='total_inventory', to='inventory.item')),
                ('last_stock_movement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_records', to='inventory.stockmovement')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='total_inventory', to='inventory.location')),
                ('procurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='total_inventory', to='inventory.procurement')),
            ],
            options={
                'unique_together': {('item', 'procurement', 'location')},
            },
        ),
    ]
